import { questions } from "./questions.js";

const refs = {
  testWrapper: document.querySelector("#test"),
  answerResult: document.querySelector(".answer-result"),
  explanationText: document.querySelector(".explanation-text"),
};

let currentIndex = 0;
let studentScore = 0;

function renderQ(index) {
  const { question, options, id } = questions[index];

  refs.testWrapper.innerHTML = `<div class="test-item" id=${id}><h2 class="question">${id}. ${question}</h2>
  ${options
    .map(
      (
        option
      ) => `<label class="options"><input type="radio" name="options" value="${option}" />
     ${option}</label>`
    )
    .join("")}
  </div>
  <button type="button" class="next-button" data-index="${id}" disabled>Next -></button>`;

  document.querySelector(".test-item").addEventListener("click", checkA);
  document.querySelector(".next-button").addEventListener("click", nextQ);
}
renderQ(currentIndex);

function checkA({ target }) {
  if (target.nodeName !== "INPUT") return;

  const currentQuestion = questions[currentIndex];
  const correctInput = [
    ...document.querySelectorAll('input[type="radio"]'),
  ].find((i) => i.value === currentQuestion.answer);
  console.log(correctInput);

  const selectedAnswer = target.value;
  const input = target.closest("input");

  if (currentQuestion.answer === selectedAnswer) {
    studentScore += currentQuestion.credit;
    refs.answerResult.textContent = "–í—ñ—Ç–∞—é! –¶–µ –ø—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å!ü§©";
    input.classList.add("success");
  } else {
    refs.answerResult.textContent = "–ù–∞–∂–∞–ª—å —Ü–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—åüò¢";
    input.classList.add("error");
    correctInput.classList.add("success");
  }
  refs.explanationText.textContent = currentQuestion.explanation;
  document.querySelector(".next-button").disabled = false;
  document
    .querySelectorAll("input[name='options']")
    .forEach((i) => (i.disabled = true));
}

function nextQ() {
  currentIndex++;

  if (currentIndex >= questions.length) {
    const maxScore = questions.reduce((sum, q) => sum + q.credit, 0);
    const level = getLevel(studentScore, maxScore);
    refs.testWrapper.innerHTML =
      "<button onclick=location.reload()>–ü–æ—á–∞—Ç–∏ –∑–Ω–æ–≤!</button>";
    refs.answerResult.textContent = `–í—ñ—Ç–∞—é! –í–∏ –ø—Ä–æ–π—à–ª–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—èü•≥ –°—É–º–∞ –Ω–∞–±—Ä–∞–Ω–∏—Ö –±–∞–ª—ñ–≤ = ${studentScore} –∑ ${maxScore} –º–æ–∂–ª–∏–≤–∏—Ö`;
    refs.explanationText.innerHTML = `–¢–≤—ñ–π —Ä—ñ–≤–µ–Ω—å –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ - ${level.title}<br>${level.message}`;
    return;
  }
  refs.answerResult.textContent = "";
  refs.explanationText.textContent = "";
  renderQ(currentIndex);
}

function getLevel(score, maxScore) {
  const percent = (score / maxScore) * 100;

  if (percent === 100) {
    return {
      title: "–ï–∫—Å–ø–µ—Ä—Ç üí™",
      message: "–§–∞–Ω—Ç–∞—Å—Ç–∏—á–Ω–æ! –¢–∏ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –º–∞–π—Å—Ç–µ—Ä JavaScript! üöÄ",
    };
  }

  if (percent >= 70) {
    return {
      title: "–í–∏—â–µ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ",
      message: "–ß—É–¥–æ–≤–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –©–µ —Ç—Ä—ñ—à–∫–∏ ‚Äî —ñ —Ç–∏ –µ–∫—Å–ø–µ—Ä—Ç! üî•",
    };
  }

  if (percent >= 40) {
    return {
      title: "–°–µ—Ä–µ–¥–Ω—ñ–π",
      message: "–¢–∏ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É —à–ª—è—Ö—É! –ü—Ä–æ–¥–æ–≤–∂—É–π –ø—Ä–∞–∫—Ç–∏–∫—É–≤–∞—Ç–∏—Å—è üí°",
    };
  }

  return {
    title: "–ü–æ—á–∞—Ç–∫—ñ–≤–µ—Ü—å",
    message: "–ö–æ–∂–µ–Ω –µ–∫—Å–ø–µ—Ä—Ç –∫–æ–ª–∏—Å—å –ø–æ—á–∏–Ω–∞–≤. –ù–µ –∑–¥–∞–≤–∞–π—Å—è ‚Äî —Ç–∏ –∑–º–æ–∂–µ—à! üí™",
  };
}
